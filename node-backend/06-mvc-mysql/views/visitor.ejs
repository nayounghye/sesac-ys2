<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- axios -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- 제이쿼리 -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <title>방명록</title>
  </head>
  <body>
    <form name="form-visitor">
      <fieldset>
        <legend>방명록 등록</legend>
        <input type="text" name="username" placeholder="이름" />
        <br /><br />
        <input type="text" name="comment" placeholder="내용" />
        <br /><br />
        <button type="button" onclick="addVisitor()">등록</button>
      </fieldset>
    </form>
    <div>
      <table border="1" cellspacing="0">
        <thead>
          <tr>
            <th>ID</th>
            <th>작성자</th>
            <th>방명록</th>
            <th>수정</th>
            <th>삭제</th>
          </tr>
        </thead>
        <br />
        <tbody>
          <% for(let i = 0; i< data.length; i++) { %>
          <tr>
            <td><%= data[i].id %></td>
            <td><%= data[i].username %></td>
            <td><%= data[i].comment %></td>
            <td><button type="button" onclick="updateVisitor('<%= data[i].id %>', this.parentElement.parentElement)">수정</button></td>
            <td><button type="button" onclick="deleteVisitor('<%= data[i].id %>', this.parentElement.parentElement)">삭제</button></td>
            <!--  = <td><button type="button" onclick="deleteVisitor(this.parentElement.parentElement)">삭제</button></td> -->

          </tr>
          <% } %>
        </tbody>
      </table>
    </div>
    <script>
      function addVisitor() {
        // 1. 서버에 보낼 데이터를 만들어야 한다.
        const form = document.forms["form-visitor"]
        const data = {
          username: form.username.value,
          comment: form.comment.value
        }
        // 2. axios 를 이용해 데이터를 서버로 전송한다.
        axios({
          method: 'post',
          url: '/visitor',
          data: data,
        }).then((res) => {
          // 3. axios 응답을 받으면, table에 행 추가(동적으로)
          const {
            id,
            username,
            comment
          } = res.data;

          $("tbody").append(
            `<tr>
          <td>${id}</td>
          <td>${username}</td>
          <td>${comment}</td>
          <td><button type="button" onclick="updateVisitor(${id}, this.parentElement.parentElement)">수정</button></td>
          <td><button type="button" onclick="deleteVisitor(${id}, this.parentElement.parentElement)">삭제</button></td>
           </tr>`)
        })
      }

      function deleteVisitor(id, Trelement) {
        // 삭제할 id가 필요하다.
        // id를 어떻게 받아와야할까?
        // 본 문서 42번째 줄처럼 수정해야함.
        // id를 이용해서 url을 완성해서 요청을 보낸다.
        axios({
          method: 'delete',
          url: `/visitor/${id}`,
        }).then((res) => {
          console.log(res.data)

          if (res.data.result) {
            //삭제할 td태그가 필요하다.
            $(Trelement).remove();
          } else {
            alert("존재하지 않는 방명록 입니다.")
          }
        })
      }
    </script>
  </body>
</html>