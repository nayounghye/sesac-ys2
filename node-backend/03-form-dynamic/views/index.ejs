<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>동적 폼 전송</title>
    <!-- 제이쿼리 3.7.1 minified -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <!--axios cdn : axios 사용을 위함-->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  </head>
  <body>

    <!-- 동적 폼 전송에서는 form에 action을 넣지 않음! 왜냐 다른 페이지로 넘기는게 아닌, 현재 위치에서 변경할거니까!-->
    <form name="register">
      <input type="text" name="id" placeholder="ID" />
      <input type="password" name="pw" placeholder="비밀번호" />
      <input type="text" name="name" placeholder="이름" />

      <!-- 아래 코드는 일반(동기) 폼 전송을 할 때 type submit-->
      <!--  '<input type="submit" />' 은  '<button type="submit"></button>' 와 같다. -->
      <div>
        <button type="button" onclick="ajaxGet()">ajax get 전송</button>
        <button type="button" onclick="ajaxPost()">ajax post 전송</button>
        <button type="button" onclick="axiosGet()">axios get 전송</button>
        <button type="button" onclick="axiosPost()">axios post 전송</button>
      </div>
    </form>
    <h3 id="result"></h3>
    <script>
      function getData() {
        const form = document.forms["register"]

        const data = {
          id: form.id.value,
          pw: form.pw.value,
          name: form.name.value

        }
        return data
      }

      function ajaxGet() {

        // const form = document.forms["register"]
        // // console.dir(form);
        // // 위에 만들어둔 form 태그 중 name값을 입력하면 해당 input태그만 출력할 수 있다.
        // // console.log(form.id);
        // // 위에 만들어둔 form 태그 중 name값을 입력하면 해당 input태그에 사용자가 입력한 값을 출력할 수 있다.
        // // console.log(form.id.value);

        // const data = {
        //   id: form.id.value,
        //   pw: form.pw.value,
        //   name: form.name.value

      }
      $.ajax({
        type: "GET", // 폼 속성 중 method에 해당하는 것을 입력한다.
        url: "/ajax", // 폼 속성 중 action에 해당하는 것을 입력한다.
        data: data, // 객체로 데이터를 넣는다.
        // get 요청일 때만 아래와 같이 쿼리로 직접 입력할 수있다.
        // url: `/ajax?id=${data.id}&pw${data.pw}&name${data.name}`
        success: function(result) { // 응답을 성공적으로 받았을 경우에 대한 이벤트 핸들러다.
          // 매개변수(result)에 응답이 들어온다.
          console.log(result);
          $("#result").html(`ajax get 요청 성공 ${result.name}님 환영합니다!`)
        }
      })


      function ajaxPost() {
        const data = getData()
        $.ajax({
          type: "POST",
          url: "/ajax",
          data: data,
          success: function(result) {
            console.log(result);
            //  아래 처럼 미리 선언해두면, 매번 'result.name' 이런식으로 안적어도 된다.
            // const {
            //   name
            // } = result;
            //  $("#result").html(`ajax post 요청 성공 ${name}님 환영합니다.`)
            $("#result").html(`ajax post 요청 성공 ${result.name}님 환영합니다.`)
          }
        })


      }

      function axiosGet() {
        const data = getData()
        // axios 함수는 promise 객체를 return 한다.
        axios({
          method: "GET",
          url: "/axios",
          params: data, // get 요청으로 데이터를 보낼 때 params를 사용한다.
          // params 대신 url에 query(`/axios?id=${data.id}&pw${data.pw}&name${data.name}`)를 직접 작성해도 된다. 
        }).then((res) => {
          // 서버에서 보내준 응답이 res에 담긴다.
          console.log("res", res);
          console.log("res data", res.data);
          const {
            name
          } = res.data;
          $("#result").html(`axios get 요청 성공 ${name}님 환영합니다.`)
        })
      }

      function axiosPost() {
        const data = getData()
        axios({
          method: "POST",
          url: "/axios",
          data: data,
        }).then((res) => {
          console.log(res.data)
          const {
            name
          } = res.data
          $("#result").html(`axios post 요청 성공 ${name}님 환영합니다.`)
        })
      }

      // 위 axiosPost를 async/await 으로 사용하면?
      async function axiosPost() {
        const data = getData();
        const res = await axios({
          method: "POST",
          url: "/axios",
          data: data,
        })
        console.log("res", res);
        console.log("res.data", res.data)
        $("#result").html(`axios post 요청 성공 ${res,data.name}님 환영합니다.`)
      }
    </script>





  </body>
</html>